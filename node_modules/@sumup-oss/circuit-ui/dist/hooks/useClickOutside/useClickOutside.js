"use strict";
import { useRef, useEffect } from "react";
import { isArray } from "../../util/type-check.js";
function useClickOutside(ref, callback, active = true) {
  const isOutsideClick = useRef(false);
  const refs = isArray(ref) ? ref : [ref];
  useEffect(() => {
    if (!active) {
      return void 0;
    }
    const handleOutsideMousedown = (event) => {
      isOutsideClick.current = !refs.some(
        (r) => r.current ? r.current.contains(event.target) : true
      );
    };
    const handleOutsideClick = (event) => {
      if (isOutsideClick.current) {
        callback(event);
      }
      isOutsideClick.current = false;
    };
    document.addEventListener("mousedown", handleOutsideMousedown);
    document.addEventListener("click", handleOutsideClick);
    return () => {
      document.removeEventListener("mousedown", handleOutsideMousedown);
      document.removeEventListener("click", handleOutsideClick);
    };
  }, [...refs, callback, active]);
}
export {
  useClickOutside
};
