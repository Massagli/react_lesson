"use strict";
import { useRef, useCallback } from "react";
import { useLatest } from "../useLatest/useLatest.js";
function useSwipe(onSwipe, minSwipeDistance = 50) {
  const touchStart = useRef(null);
  const touchEnd = useRef(null);
  const swipeHandler = useLatest(onSwipe);
  const onTouchStart = useCallback((event) => {
    const { clientX, clientY } = event.targetTouches[0];
    touchStart.current = { clientX, clientY };
    touchEnd.current = null;
  }, []);
  const onTouchMove = useCallback((event) => {
    const { clientX, clientY } = event.targetTouches[0];
    touchEnd.current = { clientX, clientY };
  }, []);
  const onTouchEnd = useCallback(() => {
    if (!touchStart.current || !touchEnd.current) {
      return;
    }
    const distanceX = touchStart.current.clientX - touchEnd.current.clientX;
    const distanceY = touchStart.current.clientY - touchEnd.current.clientY;
    if (Math.abs(distanceX) > Math.abs(distanceY)) {
      if (Math.abs(distanceX) > minSwipeDistance) {
        const direction = distanceX > 0 ? "left" : "right";
        swipeHandler.current(direction);
      }
    }
    if (Math.abs(distanceY) > minSwipeDistance) {
      const direction = distanceY > 0 ? "up" : "down";
      swipeHandler.current(direction);
    }
  }, [swipeHandler, minSwipeDistance]);
  return { onTouchStart, onTouchMove, onTouchEnd };
}
export {
  useSwipe
};
