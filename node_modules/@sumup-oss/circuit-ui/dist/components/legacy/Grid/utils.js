"use strict";
import { css } from "@emotion/react";
import { isString } from "../../../util/type-check.js";
function normalizeToNumber(value) {
  return isString(value) ? Number.parseInt(value, 10) : value;
}
function composeBreakpoints(fn, theme, breakpoints) {
  return Object.entries(breakpoints).filter(([breakpoint]) => {
    const hasGridConfig = Boolean(theme.grid[breakpoint]);
    if (process.env.NODE_ENV !== "production" && !hasGridConfig) {
      throw new Error(
        `The breakpoint '${breakpoint}' isn't supported by the grid.`
      );
    }
    return hasGridConfig;
  }).sort(
    ([breakpointA], [breakpointB]) => theme.grid[breakpointA].priority - theme.grid[breakpointB].priority
  ).map(([breakpoint, option]) => fn(theme, theme.grid[breakpoint], option));
}
function wrapStyles(theme, breakpoint, styles) {
  return breakpoint === "default" ? css(styles) : css`
        ${theme.mq[breakpoint]} {
          ${styles}
        }
      `;
}
export {
  composeBreakpoints,
  normalizeToNumber,
  wrapStyles
};
