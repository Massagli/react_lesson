/**
 * Copyright 2021, SumUp Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { type ReactNode, type HTMLAttributes } from 'react';
import type { AsPropType } from '../../types/prop-types.js';
export interface SkeletonContainerProps extends HTMLAttributes<HTMLDivElement> {
    /**
     * The SkeletonContainer should wrap the entire section that's loading.
     */
    children: ReactNode;
    /**
     * Whether the section content is loading.
     */
    isLoading: boolean;
}
/**
 * The SkeletonContainer wraps a section that's loading. It disables user
 * interactions and signals to screen readers that content is being loaded.
 */
export declare const SkeletonContainer: import("react").ForwardRefExoticComponent<SkeletonContainerProps & import("react").RefAttributes<HTMLDivElement>>;
export interface SkeletonProps extends HTMLAttributes<HTMLSpanElement> {
    /**
     * The content that should be replaced by a skeleton element when it being
     * loaded.
     */
    children: ReactNode;
    /**
     * Whether the skeleton should be circular instead of rectangular.
     * Default: `false`.
     */
    circle?: boolean;
    /**
     * Render the skeleton using any HTML element.
     */
    as?: AsPropType;
}
/**
 * A placeholder for asynchronously loaded content with a subtle loading
 * animation. Only works when wrapped in a SkeletonContainer.
 */
export declare const Skeleton: import("react").ForwardRefExoticComponent<SkeletonProps & import("react").RefAttributes<HTMLSpanElement>>;
