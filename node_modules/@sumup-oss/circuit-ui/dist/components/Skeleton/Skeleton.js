"use strict";
"use client";
import { jsx } from "react/jsx-runtime";
import { forwardRef, useContext, createContext } from "react";
import { clsx } from "../../styles/clsx.js";
import classes from "./Skeleton.module.css.js";
const SkeletonContext = createContext(false);
const SkeletonContainer = forwardRef(({ children, className, isLoading, ...props }, ref) => /* @__PURE__ */ jsx(SkeletonContext.Provider, { value: isLoading, children: /* @__PURE__ */ jsx(
  "div",
  {
    ...props,
    className: clsx(classes.container, className),
    ref,
    "aria-busy": isLoading,
    inert: isLoading ? "" : null,
    children
  }
) }));
SkeletonContainer.displayName = "SkeletonContainer";
const Skeleton = forwardRef(
  ({ children, className, as: Element = "span", circle, ...props }, ref) => {
    const isLoading = useContext(SkeletonContext);
    if (isLoading) {
      return /* @__PURE__ */ jsx(
        Element,
        {
          ...props,
          className: clsx(
            classes.base,
            classes.placeholder,
            circle && classes.circle,
            className
          ),
          ref,
          children
        }
      );
    }
    return /* @__PURE__ */ jsx(Element, { ...props, className: clsx(classes.base, className), ref, children });
  }
);
Skeleton.displayName = "Skeleton";
export {
  Skeleton,
  SkeletonContainer
};
