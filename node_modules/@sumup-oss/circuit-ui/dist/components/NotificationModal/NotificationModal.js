"use strict";
"use client";
import { jsxs, jsx } from "react/jsx-runtime";
import ReactModal from "react-modal";
import { CircuitError } from "../../util/errors.js";
import classes from "./NotificationModal.module.css.js";
import { CloseButton } from "../CloseButton/CloseButton.js";
import { Headline } from "../Headline/Headline.js";
import { Body } from "../Body/Body.js";
import { ButtonGroup } from "../ButtonGroup/ButtonGroup.js";
import { Image } from "../Image/Image.js";
const TRANSITION_DURATION = 200;
function NotificationImage({ image }) {
  if (!image) {
    return null;
  }
  if ("svg" in image) {
    const Svg = image.svg;
    const isDecorative = !image.alt;
    return /* @__PURE__ */ jsx("div", { className: classes.image, children: /* @__PURE__ */ jsx(
      Svg,
      {
        ...isDecorative ? { "aria-hidden": true } : { "aria-label": image.alt, "role": "img" }
      }
    ) });
  }
  return /* @__PURE__ */ jsx(Image, { ...image, className: classes.image });
}
const NotificationModal = ({
  image,
  headline,
  body,
  actions,
  onClose,
  closeButtonLabel,
  preventClose = false,
  className,
  ...props
}) => {
  if (process.env.NODE_ENV !== "production" && className) {
    throw new CircuitError(
      "NotificationModal",
      "Custom styles are not supported by this component. If your use case requires custom styles, please open an issue at https://github.com/sumup-oss/circuit-ui."
    );
  }
  const reactModalProps = {
    className: {
      base: classes.base,
      afterOpen: classes.open,
      beforeClose: classes.closed
    },
    overlayClassName: {
      base: classes.overlay,
      afterOpen: classes.open,
      beforeClose: classes.closed
    },
    onRequestClose: onClose,
    closeTimeoutMS: TRANSITION_DURATION,
    shouldCloseOnOverlayClick: !preventClose,
    shouldCloseOnEsc: !preventClose,
    ...props
  };
  function wrapOnClick(onClick) {
    return (event) => {
      onClose == null ? void 0 : onClose(event);
      onClick == null ? void 0 : onClick(event);
    };
  }
  return /* @__PURE__ */ jsxs(ReactModal, { ...reactModalProps, children: [
    !preventClose && closeButtonLabel && /* @__PURE__ */ jsx(CloseButton, { onClick: onClose, className: classes.close, children: closeButtonLabel }),
    /* @__PURE__ */ jsx(NotificationImage, { image }),
    /* @__PURE__ */ jsx(Headline, { as: "h2", size: "s", className: classes.headline, children: headline }),
    body && /* @__PURE__ */ jsx(Body, { children: body }),
    actions && /* @__PURE__ */ jsx(
      ButtonGroup,
      {
        actions: {
          primary: {
            ...actions.primary,
            onClick: wrapOnClick(actions.primary.onClick)
          },
          secondary: actions.secondary && {
            ...actions.secondary,
            onClick: wrapOnClick(actions.secondary.onClick)
          }
        },
        className: classes.buttons
      }
    )
  ] });
};
NotificationModal.TRANSITION_DURATION = TRANSITION_DURATION;
export {
  NotificationModal
};
