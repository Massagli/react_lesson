"use strict";
"use client";
import { jsx } from "react/jsx-runtime";
import { forwardRef, useId } from "react";
import { resolveNumberFormat } from "@sumup-oss/intl";
import { NumericFormat } from "react-number-format";
import { clsx } from "../../styles/clsx.js";
import { formatPlaceholder } from "./PercentageInputService.js";
import classes from "./PercentageInput.module.css.js";
import { Input } from "../Input/Input.js";
const DEFAULT_FORMAT = {
  decimalDelimiter: ".",
  groupDelimiter: ","
};
const PercentageInput = forwardRef(
  ({
    locale,
    placeholder = "0",
    decimalScale = 0,
    "aria-describedby": descriptionId,
    ...props
  }, ref) => {
    const percentageSymbolId = useId();
    const descriptionIds = clsx(percentageSymbolId, descriptionId);
    const { groupDelimiter, decimalDelimiter } = resolveNumberFormat(locale, {
      style: "percent",
      // There must be at least 1 decimal for the decimalDelimiter to be resolved
      minimumFractionDigits: 1,
      maximumFractionDigits: 1
    }) || DEFAULT_FORMAT;
    const placeholderString = formatPlaceholder(placeholder, locale, {
      minimumFractionDigits: decimalScale,
      maximumFractionDigits: decimalScale
    });
    const allowedDecimalSeparators = [
      ".",
      ",",
      ...decimalDelimiter ? [decimalDelimiter] : []
    ];
    const renderSuffix = (suffixProps) => /* @__PURE__ */ jsx(
      "span",
      {
        ...suffixProps,
        className: clsx(suffixProps.className, classes.symbol),
        id: percentageSymbolId,
        children: "%"
      }
    );
    return /* @__PURE__ */ jsx(
      NumericFormat,
      {
        thousandSeparator: groupDelimiter,
        decimalSeparator: decimalDelimiter,
        decimalScale,
        customInput: Input,
        getInputRef: ref,
        allowedDecimalSeparators,
        renderSuffix,
        placeholder: placeholderString,
        textAlign: "right",
        type: "text",
        inputMode: "decimal",
        "aria-describedby": descriptionIds,
        ...props
      }
    );
  }
);
PercentageInput.displayName = "PercentageInput";
export {
  PercentageInput
};
