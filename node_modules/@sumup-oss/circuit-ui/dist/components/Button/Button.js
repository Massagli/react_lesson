"use strict";
"use client";
import { CircuitError } from "../../util/errors.js";
import { clsx } from "../../styles/clsx.js";
import { deprecate } from "../../util/logger.js";
import classes from "./Button.module.css.js";
import { createButtonComponent, legacyButtonSizeMap } from "./base.js";
const Button = createButtonComponent(
  "Button",
  ({ className, size: legacySize = "m", stretch, variant, ...props }) => {
    const size = legacyButtonSizeMap[legacySize] || legacySize;
    if (process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "test" && props.icon && props.navigationIcon) {
      throw new CircuitError(
        "Button",
        "The leading and trailing icons cannot be used at the same time. Remove either the `icon` or the `navigationIcon` prop."
      );
    }
    if (process.env.NODE_ENV !== "production" && legacyButtonSizeMap[legacySize]) {
      deprecate(
        "Button",
        `The \`${legacySize}\` size has been deprecated. Use the \`${legacyButtonSizeMap[legacySize]}\` size instead.`
      );
    }
    return {
      className: clsx(
        className,
        classes[size],
        stretch && classes.stretch,
        variant === "tertiary" && classes.tertiary
      ),
      variant,
      size,
      ...props
    };
  }
);
export {
  Button
};
