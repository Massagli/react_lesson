"use strict";
import { jsx } from "react/jsx-runtime";
import { ANIMATION_DURATION, SLIDE_DIRECTIONS } from "../../constants.js";
import { clsx } from "../../../../styles/clsx.js";
import { getStackOrder, shouldAnimate, getDynamicWidth } from "./SlideService.js";
import classes from "./Slide.module.css.js";
function Slide({
  index = 0,
  step = 0,
  prevStep,
  slideSize = {},
  slideDirection,
  animationDuration = ANIMATION_DURATION,
  children,
  style = {},
  ...props
}) {
  const stackOrder = getStackOrder(
    index,
    step,
    prevStep,
    slideDirection
  );
  const shouldAnimate$1 = shouldAnimate(
    index,
    step,
    prevStep,
    slideDirection
  );
  const dynamicWidth = getDynamicWidth(slideSize.width);
  const isAnimating = Boolean(slideSize.width && shouldAnimate$1);
  return /* @__PURE__ */ jsx(
    "div",
    {
      style: {
        "--slide-width": dynamicWidth,
        "--slide-stack-order": stackOrder,
        "--slide-transform-x": `${-index * 100}%`,
        "--slide-animation-duration": `${animationDuration}ms`,
        ...style
      },
      className: classes.base,
      ...props,
      children: /* @__PURE__ */ jsx(
        "div",
        {
          className: clsx(
            classes.inner,
            isAnimating && slideDirection === SLIDE_DIRECTIONS.FORWARD && classes["animate-in"],
            isAnimating && slideDirection === SLIDE_DIRECTIONS.BACK && classes["animate-out"]
          ),
          children: /* @__PURE__ */ jsx("div", { className: classes.content, children })
        }
      )
    }
  );
}
export {
  Slide
};
