/**
 * Copyright 2019, SumUp Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Slide } from './components/Slide/index.js';
import { SlideImage } from './components/SlideImage/index.js';
import { Status } from './components/Status/index.js';
export { Carousel } from './Carousel.js';
export type { CarouselProps } from './Carousel.js';
export declare const CarouselComposer: {
    Container: ({ className, ...props }: import("react").HTMLAttributes<HTMLDivElement>) => import("react/jsx-runtime").JSX.Element;
    Controls: ({ className, ...props }: import("react").HTMLAttributes<HTMLDivElement>) => import("react/jsx-runtime").JSX.Element;
    Slide: typeof Slide;
    Slides: import("react").ForwardRefExoticComponent<import("react").HTMLAttributes<HTMLDivElement> & import("react").RefAttributes<HTMLDivElement>>;
    SlideImage: typeof SlideImage;
    Status: typeof Status;
    ButtonList: ({ className, ...props }: import("react").HTMLAttributes<HTMLDivElement>) => import("react/jsx-runtime").JSX.Element;
    PlayButton: ({ paused, ...props }: {
        variant?: "primary" | "secondary" | "tertiary" | undefined;
        name?: string | undefined | undefined;
        type?: "button" | "reset" | "submit" | undefined;
        id?: string | undefined | undefined;
        media?: string | undefined | undefined;
        color?: string | undefined | undefined;
        content?: string | undefined | undefined;
        translate?: "yes" | "no" | undefined | undefined;
        value?: string | number | readonly string[] | undefined;
        hidden?: boolean | undefined | undefined;
        form?: string | undefined | undefined;
        label?: string | undefined;
        slot?: string | undefined | undefined;
        style?: import("react").CSSProperties | undefined;
        title?: string | undefined | undefined;
        dir?: string | undefined | undefined;
        rel?: string | undefined | undefined;
        target?: import("react").HTMLAttributeAnchorTarget | undefined;
        accessKey?: string | undefined | undefined;
        draggable?: (boolean | "false" | "true") | undefined;
        lang?: string | undefined | undefined;
        className?: string | undefined | undefined;
        prefix?: string | undefined | undefined;
        role?: import("react").AriaRole | undefined;
        children?: ((string | number | boolean | import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>> | Iterable<import("react").ReactNode> | import("react").ReactPortal | null) & (string | import("react").ReactElement<import("@sumup-oss/icons").IconProps<any>, string | import("react").JSXElementConstructor<any>>)) | undefined;
        contentEditable?: "inherit" | (boolean | "false" | "true") | "plaintext-only" | undefined;
        enterKeyHint?: "enter" | "done" | "go" | "next" | "previous" | "search" | "send" | undefined | undefined;
        inputMode?: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search" | undefined | undefined;
        nonce?: string | undefined | undefined;
        tabIndex?: number | undefined | undefined;
        disabled?: boolean | undefined | undefined;
        size?: "s" | "m" | "kilo" | "giga" | undefined;
        suppressHydrationWarning?: boolean | undefined | undefined;
        href?: string | undefined | undefined;
        "aria-activedescendant"?: string | undefined | undefined;
        "aria-atomic"?: (boolean | "false" | "true") | undefined;
        "aria-autocomplete"?: "none" | "inline" | "list" | "both" | undefined | undefined;
        "aria-braillelabel"?: string | undefined | undefined;
        "aria-brailleroledescription"?: string | undefined | undefined;
        "aria-busy"?: (boolean | "false" | "true") | undefined;
        "aria-checked"?: boolean | "false" | "mixed" | "true" | undefined | undefined;
        "aria-colcount"?: number | undefined | undefined;
        "aria-colindex"?: number | undefined | undefined;
        "aria-colindextext"?: string | undefined | undefined;
        "aria-colspan"?: number | undefined | undefined;
        "aria-controls"?: string | undefined | undefined;
        "aria-current"?: boolean | "false" | "true" | "page" | "step" | "location" | "date" | "time" | undefined | undefined;
        "aria-describedby"?: string | undefined | undefined;
        "aria-description"?: string | undefined | undefined;
        "aria-details"?: string | undefined | undefined;
        "aria-disabled"?: (boolean | "false" | "true") | undefined;
        "aria-dropeffect"?: "none" | "copy" | "execute" | "link" | "move" | "popup" | undefined | undefined;
        "aria-errormessage"?: string | undefined | undefined;
        "aria-expanded"?: (boolean | "false" | "true") | undefined;
        "aria-flowto"?: string | undefined | undefined;
        "aria-grabbed"?: (boolean | "false" | "true") | undefined;
        "aria-haspopup"?: boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog" | undefined | undefined;
        "aria-hidden"?: (boolean | "false" | "true") | undefined;
        "aria-invalid"?: boolean | "false" | "true" | "grammar" | "spelling" | undefined | undefined;
        "aria-keyshortcuts"?: string | undefined | undefined;
        "aria-label"?: string | undefined | undefined;
        "aria-labelledby"?: string | undefined | undefined;
        "aria-level"?: number | undefined | undefined;
        "aria-live"?: "off" | "assertive" | "polite" | undefined | undefined;
        "aria-modal"?: (boolean | "false" | "true") | undefined;
        "aria-multiline"?: (boolean | "false" | "true") | undefined;
        "aria-multiselectable"?: (boolean | "false" | "true") | undefined;
        "aria-orientation"?: "horizontal" | "vertical" | undefined | undefined;
        "aria-owns"?: string | undefined | undefined;
        "aria-placeholder"?: string | undefined | undefined;
        "aria-posinset"?: number | undefined | undefined;
        "aria-pressed"?: boolean | "false" | "mixed" | "true" | undefined | undefined;
        "aria-readonly"?: (boolean | "false" | "true") | undefined;
        "aria-relevant"?: "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text" | "text additions" | "text removals" | undefined | undefined;
        "aria-required"?: (boolean | "false" | "true") | undefined;
        "aria-roledescription"?: string | undefined | undefined;
        "aria-rowcount"?: number | undefined | undefined;
        "aria-rowindex"?: number | undefined | undefined;
        "aria-rowindextext"?: string | undefined | undefined;
        "aria-rowspan"?: number | undefined | undefined;
        "aria-selected"?: (boolean | "false" | "true") | undefined;
        "aria-setsize"?: number | undefined | undefined;
        "aria-sort"?: "none" | "ascending" | "descending" | "other" | undefined | undefined;
        "aria-valuemax"?: number | undefined | undefined;
        "aria-valuemin"?: number | undefined | undefined;
        "aria-valuenow"?: number | undefined | undefined;
        "aria-valuetext"?: string | undefined | undefined;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined | undefined;
        onCopy?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onCopyCapture?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onCut?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onCutCapture?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onPaste?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onPasteCapture?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onCompositionEnd?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onCompositionEndCapture?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onCompositionStart?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onCompositionStartCapture?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onCompositionUpdate?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onCompositionUpdateCapture?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onFocus?: (import("react").FocusEventHandler<HTMLAnchorElement> & import("react").FocusEventHandler<HTMLButtonElement>) | undefined;
        onFocusCapture?: (import("react").FocusEventHandler<HTMLAnchorElement> & import("react").FocusEventHandler<HTMLButtonElement>) | undefined;
        onBlur?: (import("react").FocusEventHandler<HTMLAnchorElement> & import("react").FocusEventHandler<HTMLButtonElement>) | undefined;
        onBlurCapture?: (import("react").FocusEventHandler<HTMLAnchorElement> & import("react").FocusEventHandler<HTMLButtonElement>) | undefined;
        onChange?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onChangeCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onBeforeInput?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onBeforeInputCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onInput?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onInputCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onReset?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onResetCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onSubmit?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onSubmitCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onInvalid?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onInvalidCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onLoad?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onError?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onErrorCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onKeyDown?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onKeyDownCapture?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onKeyPress?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onKeyPressCapture?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onKeyUp?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onKeyUpCapture?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onAbort?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onAbortCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onCanPlay?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onCanPlayCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onCanPlayThrough?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onCanPlayThroughCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onDurationChange?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onDurationChangeCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEmptied?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEmptiedCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEncrypted?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEncryptedCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEnded?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEndedCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadedData?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadedDataCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadedMetadata?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadedMetadataCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadStart?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadStartCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPause?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPauseCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPlay?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPlayCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPlaying?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPlayingCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onProgress?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onProgressCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onRateChange?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onRateChangeCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onResize?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onResizeCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSeeked?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSeekedCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSeeking?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSeekingCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onStalled?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onStalledCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSuspend?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSuspendCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onTimeUpdate?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onTimeUpdateCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onVolumeChange?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onVolumeChangeCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onWaiting?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onWaitingCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onAuxClick?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onAuxClickCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onClick?: ((event: import("../../index.js").ClickEvent) => void) | undefined;
        onClickCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onContextMenu?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onContextMenuCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onDoubleClick?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onDoubleClickCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onDrag?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragEnd?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragEndCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragEnter?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragEnterCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragExit?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragExitCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragLeave?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragLeaveCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragOver?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragOverCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragStart?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragStartCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDrop?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDropCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onMouseDown?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseDownCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseEnter?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseLeave?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseMove?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseMoveCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseOut?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseOutCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseOver?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseOverCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseUp?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseUpCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onSelect?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSelectCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onTouchCancel?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchCancelCapture?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchEnd?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchEndCapture?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchMove?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchMoveCapture?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchStart?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchStartCapture?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onPointerDown?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerDownCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerMove?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerMoveCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerUp?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerUpCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerCancel?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerCancelCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerEnter?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerLeave?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerOver?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerOverCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerOut?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerOutCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onGotPointerCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onGotPointerCaptureCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onLostPointerCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onLostPointerCaptureCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onScroll?: (import("react").UIEventHandler<HTMLAnchorElement> & import("react").UIEventHandler<HTMLButtonElement>) | undefined;
        onScrollCapture?: (import("react").UIEventHandler<HTMLAnchorElement> & import("react").UIEventHandler<HTMLButtonElement>) | undefined;
        onWheel?: (import("react").WheelEventHandler<HTMLAnchorElement> & import("react").WheelEventHandler<HTMLButtonElement>) | undefined;
        onWheelCapture?: (import("react").WheelEventHandler<HTMLAnchorElement> & import("react").WheelEventHandler<HTMLButtonElement>) | undefined;
        onAnimationStart?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onAnimationStartCapture?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onAnimationEnd?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onAnimationEndCapture?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onAnimationIteration?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onAnimationIterationCapture?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onTransitionEnd?: (import("react").TransitionEventHandler<HTMLAnchorElement> & import("react").TransitionEventHandler<HTMLButtonElement>) | undefined;
        onTransitionEndCapture?: (import("react").TransitionEventHandler<HTMLAnchorElement> & import("react").TransitionEventHandler<HTMLButtonElement>) | undefined;
        defaultChecked?: boolean | undefined | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined | undefined;
        autoCapitalize?: "off" | "none" | "on" | "sentences" | "words" | "characters" | undefined | (string & {}) | undefined;
        autoFocus?: boolean | undefined | undefined;
        contextMenu?: string | undefined | undefined;
        spellCheck?: (boolean | "false" | "true") | undefined;
        radioGroup?: string | undefined | undefined;
        about?: string | undefined | undefined;
        datatype?: string | undefined | undefined;
        inlist?: any;
        property?: string | undefined | undefined;
        resource?: string | undefined | undefined;
        rev?: string | undefined | undefined;
        typeof?: string | undefined | undefined;
        vocab?: string | undefined | undefined;
        autoCorrect?: string | undefined | undefined;
        autoSave?: string | undefined | undefined;
        itemProp?: string | undefined | undefined;
        itemScope?: boolean | undefined | undefined;
        itemType?: string | undefined | undefined;
        itemID?: string | undefined | undefined;
        itemRef?: string | undefined | undefined;
        results?: number | undefined | undefined;
        security?: string | undefined | undefined;
        unselectable?: "on" | "off" | undefined | undefined;
        is?: string | undefined | undefined;
        as?: import("../../types/prop-types.js").AsPropType | undefined;
        hrefLang?: string | undefined | undefined;
        referrerPolicy?: import("react").HTMLAttributeReferrerPolicy | undefined;
        formAction?: string | undefined;
        formEncType?: string | undefined | undefined;
        formMethod?: string | undefined | undefined;
        formNoValidate?: boolean | undefined | undefined;
        formTarget?: string | undefined | undefined;
        download?: any;
        ping?: string | undefined | undefined;
        locale?: import("../../util/i18n.js").Locale | undefined;
        loadingLabel?: string | undefined;
        destructive?: boolean | undefined;
        isLoading?: boolean | undefined;
        'data-testid'?: string | undefined;
    } & {
        paused?: boolean;
    }) => import("react/jsx-runtime").JSX.Element;
    NextButton: (props: {
        variant?: "primary" | "secondary" | "tertiary" | undefined;
        name?: string | undefined | undefined;
        type?: "button" | "reset" | "submit" | undefined;
        id?: string | undefined | undefined;
        media?: string | undefined | undefined;
        color?: string | undefined | undefined;
        content?: string | undefined | undefined;
        translate?: "yes" | "no" | undefined | undefined;
        value?: string | number | readonly string[] | undefined;
        hidden?: boolean | undefined | undefined;
        form?: string | undefined | undefined;
        label?: string | undefined;
        slot?: string | undefined | undefined;
        style?: import("react").CSSProperties | undefined;
        title?: string | undefined | undefined;
        dir?: string | undefined | undefined;
        rel?: string | undefined | undefined;
        target?: import("react").HTMLAttributeAnchorTarget | undefined;
        accessKey?: string | undefined | undefined;
        draggable?: (boolean | "false" | "true") | undefined;
        lang?: string | undefined | undefined;
        className?: string | undefined | undefined;
        prefix?: string | undefined | undefined;
        role?: import("react").AriaRole | undefined;
        children?: ((string | number | boolean | import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>> | Iterable<import("react").ReactNode> | import("react").ReactPortal | null) & (string | import("react").ReactElement<import("@sumup-oss/icons").IconProps<any>, string | import("react").JSXElementConstructor<any>>)) | undefined;
        contentEditable?: "inherit" | (boolean | "false" | "true") | "plaintext-only" | undefined;
        enterKeyHint?: "enter" | "done" | "go" | "next" | "previous" | "search" | "send" | undefined | undefined;
        inputMode?: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search" | undefined | undefined;
        nonce?: string | undefined | undefined;
        tabIndex?: number | undefined | undefined;
        disabled?: boolean | undefined | undefined;
        size?: "s" | "m" | "kilo" | "giga" | undefined;
        suppressHydrationWarning?: boolean | undefined | undefined;
        href?: string | undefined | undefined;
        "aria-activedescendant"?: string | undefined | undefined;
        "aria-atomic"?: (boolean | "false" | "true") | undefined;
        "aria-autocomplete"?: "none" | "inline" | "list" | "both" | undefined | undefined;
        "aria-braillelabel"?: string | undefined | undefined;
        "aria-brailleroledescription"?: string | undefined | undefined;
        "aria-busy"?: (boolean | "false" | "true") | undefined;
        "aria-checked"?: boolean | "false" | "mixed" | "true" | undefined | undefined;
        "aria-colcount"?: number | undefined | undefined;
        "aria-colindex"?: number | undefined | undefined;
        "aria-colindextext"?: string | undefined | undefined;
        "aria-colspan"?: number | undefined | undefined;
        "aria-controls"?: string | undefined | undefined;
        "aria-current"?: boolean | "false" | "true" | "page" | "step" | "location" | "date" | "time" | undefined | undefined;
        "aria-describedby"?: string | undefined | undefined;
        "aria-description"?: string | undefined | undefined;
        "aria-details"?: string | undefined | undefined;
        "aria-disabled"?: (boolean | "false" | "true") | undefined;
        "aria-dropeffect"?: "none" | "copy" | "execute" | "link" | "move" | "popup" | undefined | undefined;
        "aria-errormessage"?: string | undefined | undefined;
        "aria-expanded"?: (boolean | "false" | "true") | undefined;
        "aria-flowto"?: string | undefined | undefined;
        "aria-grabbed"?: (boolean | "false" | "true") | undefined;
        "aria-haspopup"?: boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog" | undefined | undefined;
        "aria-hidden"?: (boolean | "false" | "true") | undefined;
        "aria-invalid"?: boolean | "false" | "true" | "grammar" | "spelling" | undefined | undefined;
        "aria-keyshortcuts"?: string | undefined | undefined;
        "aria-label"?: string | undefined | undefined;
        "aria-labelledby"?: string | undefined | undefined;
        "aria-level"?: number | undefined | undefined;
        "aria-live"?: "off" | "assertive" | "polite" | undefined | undefined;
        "aria-modal"?: (boolean | "false" | "true") | undefined;
        "aria-multiline"?: (boolean | "false" | "true") | undefined;
        "aria-multiselectable"?: (boolean | "false" | "true") | undefined;
        "aria-orientation"?: "horizontal" | "vertical" | undefined | undefined;
        "aria-owns"?: string | undefined | undefined;
        "aria-placeholder"?: string | undefined | undefined;
        "aria-posinset"?: number | undefined | undefined;
        "aria-pressed"?: boolean | "false" | "mixed" | "true" | undefined | undefined;
        "aria-readonly"?: (boolean | "false" | "true") | undefined;
        "aria-relevant"?: "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text" | "text additions" | "text removals" | undefined | undefined;
        "aria-required"?: (boolean | "false" | "true") | undefined;
        "aria-roledescription"?: string | undefined | undefined;
        "aria-rowcount"?: number | undefined | undefined;
        "aria-rowindex"?: number | undefined | undefined;
        "aria-rowindextext"?: string | undefined | undefined;
        "aria-rowspan"?: number | undefined | undefined;
        "aria-selected"?: (boolean | "false" | "true") | undefined;
        "aria-setsize"?: number | undefined | undefined;
        "aria-sort"?: "none" | "ascending" | "descending" | "other" | undefined | undefined;
        "aria-valuemax"?: number | undefined | undefined;
        "aria-valuemin"?: number | undefined | undefined;
        "aria-valuenow"?: number | undefined | undefined;
        "aria-valuetext"?: string | undefined | undefined;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined | undefined;
        onCopy?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onCopyCapture?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onCut?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onCutCapture?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onPaste?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onPasteCapture?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onCompositionEnd?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onCompositionEndCapture?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onCompositionStart?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onCompositionStartCapture?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onCompositionUpdate?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onCompositionUpdateCapture?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onFocus?: (import("react").FocusEventHandler<HTMLAnchorElement> & import("react").FocusEventHandler<HTMLButtonElement>) | undefined;
        onFocusCapture?: (import("react").FocusEventHandler<HTMLAnchorElement> & import("react").FocusEventHandler<HTMLButtonElement>) | undefined;
        onBlur?: (import("react").FocusEventHandler<HTMLAnchorElement> & import("react").FocusEventHandler<HTMLButtonElement>) | undefined;
        onBlurCapture?: (import("react").FocusEventHandler<HTMLAnchorElement> & import("react").FocusEventHandler<HTMLButtonElement>) | undefined;
        onChange?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onChangeCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onBeforeInput?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onBeforeInputCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onInput?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onInputCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onReset?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onResetCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onSubmit?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onSubmitCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onInvalid?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onInvalidCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onLoad?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onError?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onErrorCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onKeyDown?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onKeyDownCapture?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onKeyPress?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onKeyPressCapture?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onKeyUp?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onKeyUpCapture?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onAbort?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onAbortCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onCanPlay?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onCanPlayCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onCanPlayThrough?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onCanPlayThroughCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onDurationChange?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onDurationChangeCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEmptied?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEmptiedCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEncrypted?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEncryptedCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEnded?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEndedCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadedData?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadedDataCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadedMetadata?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadedMetadataCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadStart?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadStartCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPause?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPauseCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPlay?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPlayCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPlaying?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPlayingCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onProgress?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onProgressCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onRateChange?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onRateChangeCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onResize?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onResizeCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSeeked?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSeekedCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSeeking?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSeekingCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onStalled?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onStalledCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSuspend?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSuspendCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onTimeUpdate?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onTimeUpdateCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onVolumeChange?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onVolumeChangeCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onWaiting?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onWaitingCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onAuxClick?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onAuxClickCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onClick?: ((event: import("../../index.js").ClickEvent) => void) | undefined;
        onClickCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onContextMenu?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onContextMenuCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onDoubleClick?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onDoubleClickCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onDrag?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragEnd?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragEndCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragEnter?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragEnterCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragExit?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragExitCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragLeave?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragLeaveCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragOver?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragOverCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragStart?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragStartCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDrop?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDropCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onMouseDown?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseDownCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseEnter?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseLeave?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseMove?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseMoveCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseOut?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseOutCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseOver?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseOverCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseUp?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseUpCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onSelect?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSelectCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onTouchCancel?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchCancelCapture?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchEnd?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchEndCapture?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchMove?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchMoveCapture?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchStart?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchStartCapture?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onPointerDown?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerDownCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerMove?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerMoveCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerUp?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerUpCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerCancel?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerCancelCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerEnter?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerLeave?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerOver?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerOverCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerOut?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerOutCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onGotPointerCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onGotPointerCaptureCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onLostPointerCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onLostPointerCaptureCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onScroll?: (import("react").UIEventHandler<HTMLAnchorElement> & import("react").UIEventHandler<HTMLButtonElement>) | undefined;
        onScrollCapture?: (import("react").UIEventHandler<HTMLAnchorElement> & import("react").UIEventHandler<HTMLButtonElement>) | undefined;
        onWheel?: (import("react").WheelEventHandler<HTMLAnchorElement> & import("react").WheelEventHandler<HTMLButtonElement>) | undefined;
        onWheelCapture?: (import("react").WheelEventHandler<HTMLAnchorElement> & import("react").WheelEventHandler<HTMLButtonElement>) | undefined;
        onAnimationStart?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onAnimationStartCapture?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onAnimationEnd?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onAnimationEndCapture?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onAnimationIteration?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onAnimationIterationCapture?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onTransitionEnd?: (import("react").TransitionEventHandler<HTMLAnchorElement> & import("react").TransitionEventHandler<HTMLButtonElement>) | undefined;
        onTransitionEndCapture?: (import("react").TransitionEventHandler<HTMLAnchorElement> & import("react").TransitionEventHandler<HTMLButtonElement>) | undefined;
        defaultChecked?: boolean | undefined | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined | undefined;
        autoCapitalize?: "off" | "none" | "on" | "sentences" | "words" | "characters" | undefined | (string & {}) | undefined;
        autoFocus?: boolean | undefined | undefined;
        contextMenu?: string | undefined | undefined;
        spellCheck?: (boolean | "false" | "true") | undefined;
        radioGroup?: string | undefined | undefined;
        about?: string | undefined | undefined;
        datatype?: string | undefined | undefined;
        inlist?: any;
        property?: string | undefined | undefined;
        resource?: string | undefined | undefined;
        rev?: string | undefined | undefined;
        typeof?: string | undefined | undefined;
        vocab?: string | undefined | undefined;
        autoCorrect?: string | undefined | undefined;
        autoSave?: string | undefined | undefined;
        itemProp?: string | undefined | undefined;
        itemScope?: boolean | undefined | undefined;
        itemType?: string | undefined | undefined;
        itemID?: string | undefined | undefined;
        itemRef?: string | undefined | undefined;
        results?: number | undefined | undefined;
        security?: string | undefined | undefined;
        unselectable?: "on" | "off" | undefined | undefined;
        is?: string | undefined | undefined;
        as?: import("../../types/prop-types.js").AsPropType | undefined;
        hrefLang?: string | undefined | undefined;
        referrerPolicy?: import("react").HTMLAttributeReferrerPolicy | undefined;
        formAction?: string | undefined;
        formEncType?: string | undefined | undefined;
        formMethod?: string | undefined | undefined;
        formNoValidate?: boolean | undefined | undefined;
        formTarget?: string | undefined | undefined;
        download?: any;
        ping?: string | undefined | undefined;
        locale?: import("../../util/i18n.js").Locale | undefined;
        loadingLabel?: string | undefined;
        destructive?: boolean | undefined;
        isLoading?: boolean | undefined;
        'data-testid'?: string | undefined;
    }) => import("react/jsx-runtime").JSX.Element;
    PrevButton: (props: {
        variant?: "primary" | "secondary" | "tertiary" | undefined;
        name?: string | undefined | undefined;
        type?: "button" | "reset" | "submit" | undefined;
        id?: string | undefined | undefined;
        media?: string | undefined | undefined;
        color?: string | undefined | undefined;
        content?: string | undefined | undefined;
        translate?: "yes" | "no" | undefined | undefined;
        value?: string | number | readonly string[] | undefined;
        hidden?: boolean | undefined | undefined;
        form?: string | undefined | undefined;
        label?: string | undefined;
        slot?: string | undefined | undefined;
        style?: import("react").CSSProperties | undefined;
        title?: string | undefined | undefined;
        dir?: string | undefined | undefined;
        rel?: string | undefined | undefined;
        target?: import("react").HTMLAttributeAnchorTarget | undefined;
        accessKey?: string | undefined | undefined;
        draggable?: (boolean | "false" | "true") | undefined;
        lang?: string | undefined | undefined;
        className?: string | undefined | undefined;
        prefix?: string | undefined | undefined;
        role?: import("react").AriaRole | undefined;
        children?: ((string | number | boolean | import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>> | Iterable<import("react").ReactNode> | import("react").ReactPortal | null) & (string | import("react").ReactElement<import("@sumup-oss/icons").IconProps<any>, string | import("react").JSXElementConstructor<any>>)) | undefined;
        contentEditable?: "inherit" | (boolean | "false" | "true") | "plaintext-only" | undefined;
        enterKeyHint?: "enter" | "done" | "go" | "next" | "previous" | "search" | "send" | undefined | undefined;
        inputMode?: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search" | undefined | undefined;
        nonce?: string | undefined | undefined;
        tabIndex?: number | undefined | undefined;
        disabled?: boolean | undefined | undefined;
        size?: "s" | "m" | "kilo" | "giga" | undefined;
        suppressHydrationWarning?: boolean | undefined | undefined;
        href?: string | undefined | undefined;
        "aria-activedescendant"?: string | undefined | undefined;
        "aria-atomic"?: (boolean | "false" | "true") | undefined;
        "aria-autocomplete"?: "none" | "inline" | "list" | "both" | undefined | undefined;
        "aria-braillelabel"?: string | undefined | undefined;
        "aria-brailleroledescription"?: string | undefined | undefined;
        "aria-busy"?: (boolean | "false" | "true") | undefined;
        "aria-checked"?: boolean | "false" | "mixed" | "true" | undefined | undefined;
        "aria-colcount"?: number | undefined | undefined;
        "aria-colindex"?: number | undefined | undefined;
        "aria-colindextext"?: string | undefined | undefined;
        "aria-colspan"?: number | undefined | undefined;
        "aria-controls"?: string | undefined | undefined;
        "aria-current"?: boolean | "false" | "true" | "page" | "step" | "location" | "date" | "time" | undefined | undefined;
        "aria-describedby"?: string | undefined | undefined;
        "aria-description"?: string | undefined | undefined;
        "aria-details"?: string | undefined | undefined;
        "aria-disabled"?: (boolean | "false" | "true") | undefined;
        "aria-dropeffect"?: "none" | "copy" | "execute" | "link" | "move" | "popup" | undefined | undefined;
        "aria-errormessage"?: string | undefined | undefined;
        "aria-expanded"?: (boolean | "false" | "true") | undefined;
        "aria-flowto"?: string | undefined | undefined;
        "aria-grabbed"?: (boolean | "false" | "true") | undefined;
        "aria-haspopup"?: boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog" | undefined | undefined;
        "aria-hidden"?: (boolean | "false" | "true") | undefined;
        "aria-invalid"?: boolean | "false" | "true" | "grammar" | "spelling" | undefined | undefined;
        "aria-keyshortcuts"?: string | undefined | undefined;
        "aria-label"?: string | undefined | undefined;
        "aria-labelledby"?: string | undefined | undefined;
        "aria-level"?: number | undefined | undefined;
        "aria-live"?: "off" | "assertive" | "polite" | undefined | undefined;
        "aria-modal"?: (boolean | "false" | "true") | undefined;
        "aria-multiline"?: (boolean | "false" | "true") | undefined;
        "aria-multiselectable"?: (boolean | "false" | "true") | undefined;
        "aria-orientation"?: "horizontal" | "vertical" | undefined | undefined;
        "aria-owns"?: string | undefined | undefined;
        "aria-placeholder"?: string | undefined | undefined;
        "aria-posinset"?: number | undefined | undefined;
        "aria-pressed"?: boolean | "false" | "mixed" | "true" | undefined | undefined;
        "aria-readonly"?: (boolean | "false" | "true") | undefined;
        "aria-relevant"?: "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text" | "text additions" | "text removals" | undefined | undefined;
        "aria-required"?: (boolean | "false" | "true") | undefined;
        "aria-roledescription"?: string | undefined | undefined;
        "aria-rowcount"?: number | undefined | undefined;
        "aria-rowindex"?: number | undefined | undefined;
        "aria-rowindextext"?: string | undefined | undefined;
        "aria-rowspan"?: number | undefined | undefined;
        "aria-selected"?: (boolean | "false" | "true") | undefined;
        "aria-setsize"?: number | undefined | undefined;
        "aria-sort"?: "none" | "ascending" | "descending" | "other" | undefined | undefined;
        "aria-valuemax"?: number | undefined | undefined;
        "aria-valuemin"?: number | undefined | undefined;
        "aria-valuenow"?: number | undefined | undefined;
        "aria-valuetext"?: string | undefined | undefined;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined | undefined;
        onCopy?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onCopyCapture?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onCut?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onCutCapture?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onPaste?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onPasteCapture?: (import("react").ClipboardEventHandler<HTMLAnchorElement> & import("react").ClipboardEventHandler<HTMLButtonElement>) | undefined;
        onCompositionEnd?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onCompositionEndCapture?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onCompositionStart?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onCompositionStartCapture?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onCompositionUpdate?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onCompositionUpdateCapture?: (import("react").CompositionEventHandler<HTMLAnchorElement> & import("react").CompositionEventHandler<HTMLButtonElement>) | undefined;
        onFocus?: (import("react").FocusEventHandler<HTMLAnchorElement> & import("react").FocusEventHandler<HTMLButtonElement>) | undefined;
        onFocusCapture?: (import("react").FocusEventHandler<HTMLAnchorElement> & import("react").FocusEventHandler<HTMLButtonElement>) | undefined;
        onBlur?: (import("react").FocusEventHandler<HTMLAnchorElement> & import("react").FocusEventHandler<HTMLButtonElement>) | undefined;
        onBlurCapture?: (import("react").FocusEventHandler<HTMLAnchorElement> & import("react").FocusEventHandler<HTMLButtonElement>) | undefined;
        onChange?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onChangeCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onBeforeInput?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onBeforeInputCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onInput?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onInputCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onReset?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onResetCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onSubmit?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onSubmitCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onInvalid?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onInvalidCapture?: (import("react").FormEventHandler<HTMLAnchorElement> & import("react").FormEventHandler<HTMLButtonElement>) | undefined;
        onLoad?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onError?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onErrorCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onKeyDown?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onKeyDownCapture?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onKeyPress?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onKeyPressCapture?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onKeyUp?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onKeyUpCapture?: (import("react").KeyboardEventHandler<HTMLAnchorElement> & import("react").KeyboardEventHandler<HTMLButtonElement>) | undefined;
        onAbort?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onAbortCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onCanPlay?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onCanPlayCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onCanPlayThrough?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onCanPlayThroughCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onDurationChange?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onDurationChangeCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEmptied?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEmptiedCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEncrypted?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEncryptedCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEnded?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onEndedCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadedData?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadedDataCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadedMetadata?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadedMetadataCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadStart?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onLoadStartCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPause?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPauseCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPlay?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPlayCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPlaying?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onPlayingCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onProgress?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onProgressCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onRateChange?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onRateChangeCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onResize?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onResizeCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSeeked?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSeekedCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSeeking?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSeekingCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onStalled?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onStalledCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSuspend?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSuspendCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onTimeUpdate?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onTimeUpdateCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onVolumeChange?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onVolumeChangeCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onWaiting?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onWaitingCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onAuxClick?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onAuxClickCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onClick?: ((event: import("../../index.js").ClickEvent) => void) | undefined;
        onClickCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onContextMenu?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onContextMenuCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onDoubleClick?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onDoubleClickCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onDrag?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragEnd?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragEndCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragEnter?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragEnterCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragExit?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragExitCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragLeave?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragLeaveCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragOver?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragOverCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragStart?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDragStartCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDrop?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onDropCapture?: (import("react").DragEventHandler<HTMLAnchorElement> & import("react").DragEventHandler<HTMLButtonElement>) | undefined;
        onMouseDown?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseDownCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseEnter?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseLeave?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseMove?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseMoveCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseOut?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseOutCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseOver?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseOverCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseUp?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onMouseUpCapture?: (import("react").MouseEventHandler<HTMLAnchorElement> & import("react").MouseEventHandler<HTMLButtonElement>) | undefined;
        onSelect?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onSelectCapture?: (import("react").ReactEventHandler<HTMLAnchorElement> & import("react").ReactEventHandler<HTMLButtonElement>) | undefined;
        onTouchCancel?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchCancelCapture?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchEnd?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchEndCapture?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchMove?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchMoveCapture?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchStart?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onTouchStartCapture?: (import("react").TouchEventHandler<HTMLAnchorElement> & import("react").TouchEventHandler<HTMLButtonElement>) | undefined;
        onPointerDown?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerDownCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerMove?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerMoveCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerUp?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerUpCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerCancel?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerCancelCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerEnter?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerLeave?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerOver?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerOverCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerOut?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onPointerOutCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onGotPointerCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onGotPointerCaptureCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onLostPointerCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onLostPointerCaptureCapture?: (import("react").PointerEventHandler<HTMLAnchorElement> & import("react").PointerEventHandler<HTMLButtonElement>) | undefined;
        onScroll?: (import("react").UIEventHandler<HTMLAnchorElement> & import("react").UIEventHandler<HTMLButtonElement>) | undefined;
        onScrollCapture?: (import("react").UIEventHandler<HTMLAnchorElement> & import("react").UIEventHandler<HTMLButtonElement>) | undefined;
        onWheel?: (import("react").WheelEventHandler<HTMLAnchorElement> & import("react").WheelEventHandler<HTMLButtonElement>) | undefined;
        onWheelCapture?: (import("react").WheelEventHandler<HTMLAnchorElement> & import("react").WheelEventHandler<HTMLButtonElement>) | undefined;
        onAnimationStart?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onAnimationStartCapture?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onAnimationEnd?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onAnimationEndCapture?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onAnimationIteration?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onAnimationIterationCapture?: (import("react").AnimationEventHandler<HTMLAnchorElement> & import("react").AnimationEventHandler<HTMLButtonElement>) | undefined;
        onTransitionEnd?: (import("react").TransitionEventHandler<HTMLAnchorElement> & import("react").TransitionEventHandler<HTMLButtonElement>) | undefined;
        onTransitionEndCapture?: (import("react").TransitionEventHandler<HTMLAnchorElement> & import("react").TransitionEventHandler<HTMLButtonElement>) | undefined;
        defaultChecked?: boolean | undefined | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined | undefined;
        autoCapitalize?: "off" | "none" | "on" | "sentences" | "words" | "characters" | undefined | (string & {}) | undefined;
        autoFocus?: boolean | undefined | undefined;
        contextMenu?: string | undefined | undefined;
        spellCheck?: (boolean | "false" | "true") | undefined;
        radioGroup?: string | undefined | undefined;
        about?: string | undefined | undefined;
        datatype?: string | undefined | undefined;
        inlist?: any;
        property?: string | undefined | undefined;
        resource?: string | undefined | undefined;
        rev?: string | undefined | undefined;
        typeof?: string | undefined | undefined;
        vocab?: string | undefined | undefined;
        autoCorrect?: string | undefined | undefined;
        autoSave?: string | undefined | undefined;
        itemProp?: string | undefined | undefined;
        itemScope?: boolean | undefined | undefined;
        itemType?: string | undefined | undefined;
        itemID?: string | undefined | undefined;
        itemRef?: string | undefined | undefined;
        results?: number | undefined | undefined;
        security?: string | undefined | undefined;
        unselectable?: "on" | "off" | undefined | undefined;
        is?: string | undefined | undefined;
        as?: import("../../types/prop-types.js").AsPropType | undefined;
        hrefLang?: string | undefined | undefined;
        referrerPolicy?: import("react").HTMLAttributeReferrerPolicy | undefined;
        formAction?: string | undefined;
        formEncType?: string | undefined | undefined;
        formMethod?: string | undefined | undefined;
        formNoValidate?: boolean | undefined | undefined;
        formTarget?: string | undefined | undefined;
        download?: any;
        ping?: string | undefined | undefined;
        locale?: import("../../util/i18n.js").Locale | undefined;
        loadingLabel?: string | undefined;
        destructive?: boolean | undefined;
        isLoading?: boolean | undefined;
        'data-testid'?: string | undefined;
    }) => import("react/jsx-runtime").JSX.Element;
};
