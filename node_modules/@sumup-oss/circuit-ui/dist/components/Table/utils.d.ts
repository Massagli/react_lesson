/**
 * Copyright 2019, SumUp Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import type { ReactNode } from 'react';
import type { Direction, SortByValue, RowCellObject, HeaderCellObject, HeaderCell, RowCell, Row, SortParams } from './types.js';
export declare const mapRowProps: (props: Row) => {
    cells: RowCell[];
};
export declare const getRowCells: (props: Row) => RowCell[];
export declare function mapCellProps(props: RowCell): RowCellObject;
export declare function mapCellProps(props: HeaderCell): HeaderCellObject;
export declare const getSortByValue: (props: RowCell) => SortByValue | ReactNode;
export declare const getSortDirection: (isActive?: boolean, currentSort?: Direction) => Direction;
export declare const ascendingSort: (i: number) => (a: Row, b: Row) => 0 | 1 | -1;
export declare const descendingSort: (i: number) => (a: Row, b: Row) => 0 | 1 | -1;
export declare const getSortParams: ({ columnIndex, sortable, sortDirection, sortLabel, sortedColumn, }: {
    columnIndex: number;
    sortable?: boolean;
    sortDirection?: Direction;
    sortLabel?: string | (({ direction }: {
        direction?: Direction;
    }) => string);
    sortedColumn?: number;
}) => SortParams;
export declare function defaultSortBy(i: number, rows: Row[], direction?: Direction): Row[];
