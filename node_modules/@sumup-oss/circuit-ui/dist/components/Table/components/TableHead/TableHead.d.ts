/**
 * Copyright 2019, SumUp Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import type { Direction, HeaderCell } from '../../types.js';
type ScrollableOptions = {
    /**
     * Adds scrollable styles the table head according to the table props.
     */
    scrollable: true;
    /**
     * The value used to make the thead fixed while scrolling.
     */
    top: number;
} | {
    scrollable?: boolean;
    top?: number;
};
type TableHeadProps = ScrollableOptions & {
    /**
     * An array of header cells for the table.
     */
    headers?: HeaderCell[];
    /**
     * Enables/disables sticky columns on mobile
     */
    rowHeaders?: boolean;
    /**
     * Adds condensed styles the table head according to the table props.
     */
    condensed?: boolean;
    /**
     * sortBy handler
     */
    onSortBy?: (i: number) => void;
    /**
     * The current sortDirection
     */
    sortDirection?: Direction;
    /**
     * The current sorted column index
     */
    sortedColumn?: number;
    /**
     * sortEnter handler
     */
    onSortEnter?: (i: number) => void;
    /**
     * sortLeave handler
     */
    onSortLeave?: (i: number) => void;
};
/**
 * TableHead for the Table component. The Table handles rendering it.
 */
export declare function TableHead({ headers, rowHeaders, condensed, scrollable, top, onSortBy, sortDirection, sortedColumn, onSortEnter, onSortLeave, }: TableHeadProps): import("react/jsx-runtime").JSX.Element;
export {};
