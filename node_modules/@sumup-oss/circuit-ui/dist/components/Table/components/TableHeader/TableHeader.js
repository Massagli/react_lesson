"use strict";
"use client";
import { jsxs, jsx } from "react/jsx-runtime";
import { isSufficientlyLabelled, AccessibilityError } from "../../../../util/errors.js";
import { clsx } from "../../../../styles/clsx.js";
import classes from "./TableHeader.module.css.js";
import { SortArrow } from "../SortArrow/SortArrow.js";
function TableHeader({
  children,
  condensed,
  align = "left",
  scope = "col",
  fixed = false,
  isHovered = false,
  sortParams = { sortable: false },
  className,
  onClick,
  ...props
}) {
  if (process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "test" && sortParams.sortable && !isSufficientlyLabelled(sortParams.sortLabel)) {
    throw new AccessibilityError(
      "Table",
      "The `sortLabel` prop is missing or invalid. Omit the `sortable` prop if you intend to disable the row sorting functionality."
    );
  }
  return /* @__PURE__ */ jsxs(
    "th",
    {
      className: clsx(
        classes.base,
        classes[align],
        isHovered && classes.hover,
        fixed && classes.fixed,
        condensed && classes.condensed,
        className
      ),
      scope,
      "aria-sort": sortParams.sortable ? sortParams.sortDirection || "none" : void 0,
      onClick,
      ...props,
      children: [
        sortParams.sortable && /* @__PURE__ */ jsx(
          SortArrow,
          {
            label: sortParams.sortLabel,
            direction: sortParams.sortDirection,
            onClick
          }
        ),
        children
      ]
    }
  );
}
export {
  TableHeader
};
