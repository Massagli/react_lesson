/**
 * Copyright 2021, SumUp Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { type HTMLAttributes, type ReactNode } from 'react';
import { type HamburgerProps } from '../Hamburger/index.js';
import { type ProfileMenuProps } from './components/ProfileMenu/index.js';
import { type UtilityLinksProps } from './components/UtilityLinks/index.js';
import type { UserProps } from './types.js';
/**
 * @deprecated Use the `var(--top-navigation-height)` CSS variable instead.
 */
export declare const TOP_NAVIGATION_HEIGHT = "57px";
export interface TopNavigationProps extends Partial<UtilityLinksProps>, HTMLAttributes<HTMLElement> {
    logo: ReactNode;
    hamburger?: HamburgerProps;
    /**
     * @deprecated Use a custom component in the `links` prop instead.
     */
    profileMenu?: Omit<ProfileMenuProps, 'user'>;
    /**
     * @deprecated Use a custom component in the `links` prop instead.
     */
    user?: UserProps;
    isLoading?: boolean;
    /**
     * Hash link to the page's main content to enable keyboard and screen reader
     * users to skip over the navigation links. Required to comply with
     * [WCAG 2.1 SC 2.4.1](https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks.html)
     */
    skipNavigationHref?: string;
    /**
     * label for the skip navigation link.
     */
    skipNavigationLabel?: string;
}
export declare function TopNavigation({ logo, user, profileMenu, links, hamburger, isLoading, className, skipNavigationHref, skipNavigationLabel, ...props }: TopNavigationProps): import("react/jsx-runtime").JSX.Element;
