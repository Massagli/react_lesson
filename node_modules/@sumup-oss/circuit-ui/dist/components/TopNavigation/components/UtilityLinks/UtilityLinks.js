"use strict";
"use client";
import { jsx, jsxs } from "react/jsx-runtime";
import { clsx } from "../../../../styles/clsx.js";
import { utilClasses } from "../../../../styles/utility.js";
import { sharedClasses } from "../../../../styles/shared.js";
import classes from "./UtilityLinks.module.css.js";
import { useComponents } from "../../../ComponentsContext/useComponents.js";
import { Skeleton } from "../../../Skeleton/Skeleton.js";
import { Body } from "../../../Body/Body.js";
function UtilityLink({
  icon: Icon,
  label,
  isActive,
  className,
  ...props
}) {
  const { Link } = useComponents();
  const Element = props.href ? Link : "button";
  return /* @__PURE__ */ jsxs(
    Element,
    {
      ...props,
      "aria-current": isActive ? "page" : void 0,
      className: clsx(
        classes.anchor,
        sharedClasses.navigationItem,
        utilClasses.focusVisibleInset,
        className
      ),
      children: [
        /* @__PURE__ */ jsx(Skeleton, { className: classes.icon, children: /* @__PURE__ */ jsx(Icon, { "aria-hidden": "true", size: "24" }) }),
        /* @__PURE__ */ jsx(Skeleton, { children: /* @__PURE__ */ jsx(Body, { as: "span", className: classes.label, weight: "semibold", children: label }) })
      ]
    }
  );
}
function UtilityLinks({ links }) {
  return /* @__PURE__ */ jsx("ul", { className: classes.list, children: links.map(
    (link) => isUtilityLink(link) ? /* @__PURE__ */ jsx("li", { className: classes.item, children: /* @__PURE__ */ jsx(UtilityLink, { ...link }) }, link.label) : /* @__PURE__ */ jsx("li", { className: classes.item, children: link.children }, link.key)
  ) });
}
function isUtilityLink(link) {
  return "label" in link;
}
export {
  UtilityLinks
};
