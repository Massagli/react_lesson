"use strict";
"use client";
import { jsx, jsxs } from "react/jsx-runtime";
import { useState, useEffect } from "react";
import { Profile as Profile$1, ChevronDown } from "@sumup-oss/icons";
import { utilClasses } from "../../../../styles/utility.js";
import { sharedClasses } from "../../../../styles/shared.js";
import { clsx } from "../../../../styles/clsx.js";
import classes from "./ProfileMenu.module.css.js";
import { Popover } from "../../../Popover/Popover.js";
import { Skeleton } from "../../../Skeleton/Skeleton.js";
import { Avatar } from "../../../Avatar/Avatar.js";
import { Body } from "../../../Body/Body.js";
function Profile({ user, label, className, ...props }) {
  const ariaLabel = [user.name, user.id].filter((part) => Boolean(part)).join(", ");
  return /* @__PURE__ */ jsxs(
    "button",
    {
      ...props,
      className: clsx(
        classes.profile,
        sharedClasses.navigationItem,
        utilClasses.focusVisibleInset,
        className
      ),
      type: "button",
      "aria-label": ariaLabel,
      title: label,
      children: [
        /* @__PURE__ */ jsx(Skeleton, { circle: true, children: user.avatar ? /* @__PURE__ */ jsx(
          Avatar,
          {
            ...user.avatar,
            variant: "identity",
            className: classes.avatar
          }
        ) : /* @__PURE__ */ jsx(Profile$1, { "aria-hidden": "true" }) }),
        /* @__PURE__ */ jsxs("span", { className: classes.details, children: [
          /* @__PURE__ */ jsx(Skeleton, { className: classes.truncate, children: /* @__PURE__ */ jsx(Body, { as: "span", size: "s", weight: "bold", children: user.name }) }),
          user.id && /* @__PURE__ */ jsx(Skeleton, { className: classes.truncate, children: /* @__PURE__ */ jsx(Body, { as: "span", size: "s", children: user.id }) })
        ] }),
        /* @__PURE__ */ jsx(ChevronDown, { size: "16", className: classes.chevron })
      ]
    }
  );
}
function ProfileMenu({
  user,
  label,
  actions,
  onToggle,
  className
}) {
  const [isOpen, setOpen] = useState(false);
  const offset = { mainAxis: 8, crossAxis: -16 };
  useEffect(() => {
    if (onToggle) {
      onToggle(isOpen);
    }
  }, [onToggle, isOpen]);
  return (
    // biome-ignore lint/a11y/useValidAriaRole: This removes the default `menu` role of the Popover.
    /* @__PURE__ */ jsx(
      Popover,
      {
        isOpen,
        onToggle: setOpen,
        component: (popoverProps) => /* @__PURE__ */ jsx(Profile, { ...popoverProps, label, user }),
        actions,
        placement: "bottom-end",
        fallbackPlacements: [],
        offset,
        className,
        role: null
      }
    )
  );
}
export {
  ProfileMenu
};
