/**
 * Copyright 2019, SumUp Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { type ReactNode } from 'react';
import { type Props as ReactModalProps } from 'react-modal';
import { type StackItem } from '../../hooks/useStack/index.js';
import type { BaseModalProps, ModalComponent } from './types.js';
type ModalState<TProps extends BaseModalProps> = Omit<TProps, 'isOpen'> & StackItem & {
    component: ModalComponent<TProps>;
};
type ModalContextValue = {
    setModal: (modal: ModalState<any>) => void;
    removeModal: (modal: ModalState<any>) => void;
};
export declare const ModalContext: import("react").Context<ModalContextValue>;
export interface ModalProviderProps<TProps extends BaseModalProps> extends Omit<ReactModalProps, 'isOpen' | 'portalClassName' | 'htmlOpenClassName' | 'bodyOpenClassName'> {
    /**
     * The ModalProvider should wrap your entire application.
     */
    children: ReactNode;
    /**
     * An array of modals that should be displayed immediately, e.g. on page load.
     */
    initialState?: ModalState<TProps>[];
}
export declare function ModalProvider<TProps extends BaseModalProps>({ children, initialState, ...defaultModalProps }: ModalProviderProps<TProps>): import("react/jsx-runtime").JSX.Element;
export {};
