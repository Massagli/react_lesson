"use strict";
"use client";
import { jsxs, jsx } from "react/jsx-runtime";
import { useCallback } from "react";
import { clsx } from "../../../../styles/clsx.js";
import classes from "./PlanPicker.module.css.js";
import { Select } from "../../../Select/Select.js";
const PlanPicker = ({
  plans,
  selectedPlans,
  onPlanSelect,
  className,
  selectFirstPlanLabel,
  selectSecondPlanLabel,
  ...props
}) => {
  const handleSelectPlan = useCallback(
    (index) => (event) => {
      const newSelectedPlans = [...selectedPlans];
      newSelectedPlans[index] = event.target.value;
      onPlanSelect(newSelectedPlans);
    },
    [onPlanSelect, selectedPlans]
  );
  const handleSelectFirstPlan = handleSelectPlan(0);
  const handleSelectSecondPlan = handleSelectPlan(1);
  return /* @__PURE__ */ jsxs("div", { className: clsx(classes.base, className), ...props, children: [
    /* @__PURE__ */ jsx(
      Select,
      {
        className: classes.select,
        hideLabel: true,
        label: selectFirstPlanLabel,
        options: plans.map((plan) => ({
          ...plan,
          disabled: plan.value === selectedPlans[1]
        })),
        value: selectedPlans[0],
        onChange: handleSelectFirstPlan
      }
    ),
    /* @__PURE__ */ jsx(
      Select,
      {
        className: classes.select,
        hideLabel: true,
        label: selectSecondPlanLabel,
        options: plans.map((plan) => ({
          ...plan,
          disabled: plan.value === selectedPlans[0]
        })),
        value: selectedPlans[1],
        onChange: handleSelectSecondPlan
      }
    )
  ] });
};
export {
  PlanPicker
};
