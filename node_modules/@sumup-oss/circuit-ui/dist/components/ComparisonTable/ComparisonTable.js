"use strict";
"use client";
import { jsxs, jsx } from "react/jsx-runtime";
import { forwardRef, useState, useCallback } from "react";
import { isSufficientlyLabelled, AccessibilityError } from "../../util/errors.js";
import { clsx } from "../../styles/clsx.js";
import { PlanPicker } from "./components/PlanPicker/PlanPicker.js";
import { PlanTable } from "./components/PlanTable/PlanTable.js";
import classes from "./ComparisonTable.module.css.js";
const ComparisonTable = forwardRef(
  ({
    caption,
    sections,
    headers,
    showAllFeaturesLabel,
    selectFirstPlanLabel,
    selectSecondPlanLabel,
    className,
    ...props
  }, ref) => {
    if (process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "test") {
      if (!isSufficientlyLabelled(showAllFeaturesLabel)) {
        throw new AccessibilityError(
          "ComparisonTable",
          "The `showAllFeaturesLabel` prop is missing or invalid."
        );
      }
      if (!isSufficientlyLabelled(caption)) {
        throw new AccessibilityError(
          "ComparisonTable",
          "The `caption` prop is missing or invalid."
        );
      }
      if (!isSufficientlyLabelled(selectFirstPlanLabel)) {
        throw new AccessibilityError(
          "ComparisonTable",
          "The `selectFirstPlanLabel` prop is missing or invalid."
        );
      }
      if (!isSufficientlyLabelled(selectSecondPlanLabel)) {
        throw new AccessibilityError(
          "ComparisonTable",
          "The `selectSecondPlanLabel` prop is missing or invalid."
        );
      }
    }
    const [activePlans, setActivePlans] = useState([
      headers[0].id,
      headers[1].id
    ]);
    const planOptions = headers.map((plan) => ({
      label: plan.title,
      value: plan.id
    }));
    const onPlanSelect = useCallback((value) => {
      setActivePlans(value);
    }, []);
    return /* @__PURE__ */ jsxs("div", { className: clsx(classes.base, className), ...props, children: [
      headers.length >= 3 && /* @__PURE__ */ jsx(
        PlanPicker,
        {
          className: classes.picker,
          plans: planOptions,
          selectedPlans: activePlans,
          onPlanSelect,
          selectSecondPlanLabel,
          selectFirstPlanLabel
        }
      ),
      /* @__PURE__ */ jsx(
        PlanTable,
        {
          ref,
          caption,
          sections,
          headers,
          activePlans: [
            headers.findIndex(({ id }) => id === activePlans[0]),
            headers.findIndex(({ id }) => id === activePlans[1])
          ],
          showAllFeaturesLabel
        }
      )
    ] });
  }
);
export {
  ComparisonTable
};
