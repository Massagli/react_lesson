/**
 * Copyright 2024, SumUp Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { type AnchorHTMLAttributes, type ButtonHTMLAttributes, type HTMLAttributes } from 'react';
type LinkElProps = AnchorHTMLAttributes<HTMLAnchorElement>;
type ButtonElProps = ButtonHTMLAttributes<HTMLButtonElement>;
export type Slide = LinkElProps & ButtonElProps & {
    /**
     * A unique identifier
     */
    id: string | number;
    /**
     * A concise description of the slide content
     */
    label: string;
};
export interface CarouselPaginationProps extends HTMLAttributes<HTMLUListElement> {
    /**
     * The collection of slides that can be navigated using this component.
     */
    slides: Slide[];
    /**
     * The unique identifier of the current slide
     */
    currentId: string | number;
    /**
     * Specify the nature of the slide content for the [`aria-current`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current) attribute.
     *
     * `page`: Represents the current page within a set of pages such as the link
     * to the current document in a breadcrumb.
     *
     * `step`: Represents the current step within a process such as the current
     * step in an enumerated multi step checkout flow.
     */
    type?: 'page' | 'step';
}
/**
 * The carousel pagination component allows users to navigate content that is
 * divided into multiple slides or pages.
 */
export declare const CarouselPagination: import("react").ForwardRefExoticComponent<CarouselPaginationProps & import("react").RefAttributes<HTMLUListElement>>;
export {};
