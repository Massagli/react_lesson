/**
 * Copyright 2022, SumUp Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import type { Props as ReactModalProps } from 'react-modal';
import type { SidePanelHookProps, OnBack, OnClose } from './useSidePanel.js';
export type SidePanelProps = Omit<ReactModalProps, 'children'> & Pick<SidePanelHookProps, 'backButtonLabel' | 'children' | 'closeButtonLabel' | 'headline'> & {
    /**
     * Boolean indicating whether the bottom side panel is being closed.
     */
    isBottomPanelClosing: boolean;
    /**
     * Boolean indicating whether the side panel should be opened without animation.
     */
    isInstantOpen: boolean;
    /**
     * Boolean indicating whether the side panel should be in desktop or mobile mode.
     */
    isMobile: boolean;
    /**
     * Boolean indicating whether the side panel is stacked over another panel.
     */
    isStacked: boolean;
    /**
     * Callback function that is called when the side panel is closed.
     */
    onBack?: OnBack;
    /**
     * Callback function that is called when the side panel is closed.
     */
    onClose: OnClose;
};
export declare const SidePanel: ({ backButtonLabel, children, closeButtonLabel, headline, isBottomPanelClosing, isInstantOpen, isMobile, isStacked, onBack, onClose, ...props }: SidePanelProps) => import("react/jsx-runtime").JSX.Element;
