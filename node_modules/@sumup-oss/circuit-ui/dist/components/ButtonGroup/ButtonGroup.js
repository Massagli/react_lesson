"use strict";
import { jsx, jsxs } from "react/jsx-runtime";
import { forwardRef } from "react";
import { clsx } from "../../styles/clsx.js";
import { deprecate } from "../../util/logger.js";
import styles from "./ButtonGroup.module.css.js";
import { Button } from "../Button/Button.js";
const ButtonGroup = forwardRef(
  ({ actions, className, align = "center", size, ...props }, ref) => {
    var _a;
    if (process.env.NODE_ENV !== "production") {
      if (actions.primary.size) {
        deprecate(
          "ButtonGroup",
          "The `actions.primary.size` prop has been deprecated. Use the top-level `size` prop instead."
        );
      }
      if ((_a = actions.secondary) == null ? void 0 : _a.size) {
        deprecate(
          "ButtonGroup",
          "The `actions.secondary.size` prop has been deprecated. Use the top-level `size` prop instead."
        );
      }
    }
    return /* @__PURE__ */ jsx("div", { ...props, className: clsx(styles.container, className), ref, children: /* @__PURE__ */ jsxs("div", { className: clsx(styles.base, styles[align]), children: [
      /* @__PURE__ */ jsx(
        Button,
        {
          ...actions.primary,
          size: size || actions.primary.size,
          variant: "primary"
        }
      ),
      actions.secondary && /* @__PURE__ */ jsx(
        Button,
        {
          ...actions.secondary,
          size: size || actions.secondary.size,
          className: clsx(styles.secondary, actions.secondary.className),
          variant: "secondary"
        }
      )
    ] }) });
  }
);
ButtonGroup.displayName = "ButtonGroup";
export {
  ButtonGroup
};
