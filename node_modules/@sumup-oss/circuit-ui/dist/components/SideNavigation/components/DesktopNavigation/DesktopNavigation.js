"use strict";
"use client";
import { jsxs, jsx } from "react/jsx-runtime";
import { utilClasses } from "../../../../styles/utility.js";
import { clsx } from "../../../../styles/clsx.js";
import classes from "./DesktopNavigation.module.css.js";
import { useFocusList } from "../../../../hooks/useFocusList/useFocusList.js";
import { SkeletonContainer, Skeleton } from "../../../Skeleton/Skeleton.js";
import { SkipLink } from "../../../SkipLink/SkipLink.js";
import { PrimaryLink } from "../PrimaryLink/PrimaryLink.js";
import { Headline } from "../../../Headline/Headline.js";
import { SecondaryLinks } from "../SecondaryLinks/SecondaryLinks.js";
function DesktopNavigation({
  isLoading,
  primaryLinks,
  primaryNavigationLabel,
  secondaryNavigationLabel,
  skipNavigationHref,
  skipNavigationLabel
}) {
  const focusProps = useFocusList();
  const activePrimaryLink = primaryLinks.find((link) => link.isActive);
  const secondaryGroups = activePrimaryLink == null ? void 0 : activePrimaryLink.secondaryGroups;
  return /* @__PURE__ */ jsxs(
    SkeletonContainer,
    {
      isLoading: Boolean(isLoading),
      className: classes.wrapper,
      children: [
        /* @__PURE__ */ jsxs(
          "nav",
          {
            className: clsx(classes.primary, utilClasses.hideScrollbar),
            "aria-label": primaryNavigationLabel,
            children: [
              skipNavigationHref && skipNavigationLabel && /* @__PURE__ */ jsx(SkipLink, { href: skipNavigationHref, children: skipNavigationLabel }),
              /* @__PURE__ */ jsx("ul", { role: "list", className: classes.list, children: primaryLinks.map((link) => /* @__PURE__ */ jsx("li", { children: /* @__PURE__ */ jsx(PrimaryLink, { ...link, ...focusProps }) }, link.label)) })
            ]
          }
        ),
        secondaryGroups && secondaryGroups.length > 0 && /* @__PURE__ */ jsxs(
          "nav",
          {
            className: classes.secondary,
            "aria-label": secondaryNavigationLabel,
            children: [
              /* @__PURE__ */ jsx(Skeleton, { className: classes.headline, as: "div", children: /* @__PURE__ */ jsx(Headline, { as: "h2", size: "s", children: activePrimaryLink == null ? void 0 : activePrimaryLink.label }) }),
              /* @__PURE__ */ jsx(SecondaryLinks, { secondaryGroups })
            ]
          }
        )
      ]
    }
  );
}
export {
  DesktopNavigation
};
