/**
 * Copyright 2019, SumUp Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { type ReactNode } from 'react';
import { type StackItem } from '../../hooks/useStack/index.js';
import type { BaseToastProps, ToastComponent } from './types.js';
type ToastState<TProps extends BaseToastProps> = TProps & StackItem & {
    component: ToastComponent<TProps>;
};
type ToastContextValue = {
    setToast: (toast: ToastState<any>) => void;
    removeToast: (toast: ToastState<any>) => void;
};
export declare const ToastContext: import("react").Context<ToastContextValue>;
export interface ToastProviderProps {
    /**
     * The ToastProvider should wrap your entire application.
     */
    children: ReactNode;
    /**
     * Choose the position of all toasts on screen (please consider sticking to default value if possible). Default: 'bottom'.
     */
    position?: 'bottom' | 'top' | 'top-right';
    /**
     * The class name to add to the toast wrapper element.
     */
    className?: string;
}
export declare function ToastProvider<TProps extends BaseToastProps>({ children, position, className, }: ToastProviderProps): import("react/jsx-runtime").JSX.Element;
export {};
