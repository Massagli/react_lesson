const _excluded = ["size"];
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    for (r = 0; r < n.length; r++)
      (o = n[r]),
        -1 === t.indexOf(o) &&
          {}.propertyIsEnumerable.call(e, o) &&
          (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r)
    if ({}.hasOwnProperty.call(r, n)) {
      if (-1 !== e.indexOf(n)) continue;
      t[n] = r[n];
    }
  return t;
}
function _extends() {
  return (
    (_extends = Object.assign
      ? Object.assign.bind()
      : function (n) {
          for (var e = 1; e < arguments.length; e++) {
            var t = arguments[e];
            for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
          }
          return n;
        }),
    _extends.apply(null, arguments)
  );
}
import React from "react";
var AutomaticBalanceTransfer24 = function AutomaticBalanceTransfer24(props) {
  return /*#__PURE__*/ React.createElement(
    "svg",
    _extends(
      {
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
      },
      props,
    ),
    /*#__PURE__*/ React.createElement("path", {
      d: "M12.0002 14.9999V19.2328C12.0002 20.1019 13.0326 20.5573 13.6745 19.9713L22.6914 11.7384C23.1257 11.3419 23.1257 10.658 22.6914 10.2615L13.6745 2.02862C13.0326 1.44257 12.0002 1.89794 12.0002 2.76711V6.99994C2.29444 6.99997 0.999566 15.6512 1.11836 20.9583C1.13596 21.7445 2.41836 21.857 2.75848 21.148C4.1098 18.3309 6.80587 15 12.0002 14.9999Z",
      fill: "currentColor",
    }),
  );
};
const sizeMap = {
  24: AutomaticBalanceTransfer24,
};
export function AutomaticBalanceTransfer(_ref) {
  let { size = "24" } = _ref,
    props = _objectWithoutProperties(_ref, _excluded);
  const Icon = sizeMap[size] || sizeMap["24"];
  if (
    process.env.NODE_ENV !== "production" &&
    process.env.NODE_ENV !== "test" &&
    !sizeMap[size]
  ) {
    console.warn(
      new Error(
        "The '".concat(
          size,
          "' size is not supported by the 'AutomaticBalanceTransfer' icon. Please use one of the available sizes: '24'.",
        ),
      ),
    );
  }
  return /*#__PURE__*/ React.createElement(Icon, props);
}
