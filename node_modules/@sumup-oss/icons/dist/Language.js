const _excluded = ["size"];
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    for (r = 0; r < n.length; r++)
      (o = n[r]),
        -1 === t.indexOf(o) &&
          {}.propertyIsEnumerable.call(e, o) &&
          (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r)
    if ({}.hasOwnProperty.call(r, n)) {
      if (-1 !== e.indexOf(n)) continue;
      t[n] = r[n];
    }
  return t;
}
function _extends() {
  return (
    (_extends = Object.assign
      ? Object.assign.bind()
      : function (n) {
          for (var e = 1; e < arguments.length; e++) {
            var t = arguments[e];
            for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
          }
          return n;
        }),
    _extends.apply(null, arguments)
  );
}
import React from "react";
var Language24 = function Language24(props) {
  return /*#__PURE__*/ React.createElement(
    "svg",
    _extends(
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: "24",
        height: "24",
        fill: "none",
        viewBox: "0 0 24 24",
      },
      props,
    ),
    /*#__PURE__*/ React.createElement("path", {
      fill: "currentColor",
      d: "M7 1a1 1 0 0 0-1 1v2H2a1 1 0 0 0 0 2h8.947a9.4 9.4 0 0 1-3.476 6.343l-.279.223A8.2 8.2 0 0 1 4.45 8.684a1 1 0 0 0-1.898.632 10.2 10.2 0 0 0 3.044 4.527l-4.22 3.376a1 1 0 0 0 1.25 1.562l4.656-3.725 2.664 1.776a1 1 0 0 0 1.11-1.664l-2.138-1.425A11.4 11.4 0 0 0 12.957 6H16a1 1 0 1 0 0-2H8V2a1 1 0 0 0-1-1",
    }),
    /*#__PURE__*/ React.createElement("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M17.923 9.615a1 1 0 0 0-1.846 0l-5 12a1 1 0 1 0 1.846.77L14.333 19h5.334l1.41 3.385a1 1 0 0 0 1.846-.77zm.91 7.385L17 12.6 15.167 17z",
      clipRule: "evenodd",
    }),
  );
};
const sizeMap = {
  24: Language24,
};
export function Language(_ref) {
  let { size = "24" } = _ref,
    props = _objectWithoutProperties(_ref, _excluded);
  const Icon = sizeMap[size] || sizeMap["24"];
  if (
    process.env.NODE_ENV !== "production" &&
    process.env.NODE_ENV !== "test" &&
    !sizeMap[size]
  ) {
    console.warn(
      new Error(
        "The '".concat(
          size,
          "' size is not supported by the 'Language' icon. Please use one of the available sizes: '24'.",
        ),
      ),
    );
  }
  return /*#__PURE__*/ React.createElement(Icon, props);
}
