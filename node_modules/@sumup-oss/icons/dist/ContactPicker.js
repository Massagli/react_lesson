const _excluded = ["size"];
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    for (r = 0; r < n.length; r++)
      (o = n[r]),
        -1 === t.indexOf(o) &&
          {}.propertyIsEnumerable.call(e, o) &&
          (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r)
    if ({}.hasOwnProperty.call(r, n)) {
      if (-1 !== e.indexOf(n)) continue;
      t[n] = r[n];
    }
  return t;
}
function _extends() {
  return (
    (_extends = Object.assign
      ? Object.assign.bind()
      : function (n) {
          for (var e = 1; e < arguments.length; e++) {
            var t = arguments[e];
            for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
          }
          return n;
        }),
    _extends.apply(null, arguments)
  );
}
import React from "react";
var ContactPicker24 = function ContactPicker24(props) {
  return /*#__PURE__*/ React.createElement(
    "svg",
    _extends(
      {
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
      },
      props,
    ),
    /*#__PURE__*/ React.createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 1C5.34315 1 4 2.34315 4 4V5H2.5C1.67157 5 1 5.67157 1 6.5C1 7.32843 1.67157 8 2.5 8H4V16H2.5C1.67157 16 1 16.6716 1 17.5C1 18.3284 1.67157 19 2.5 19H4V20C4 21.6569 5.34315 23 7 23H20C21.6569 23 23 21.6569 23 20V4C23 2.34315 21.6569 1 20 1H7ZM16 8.5C16 9.88071 14.8807 11 13.5 11C12.1193 11 11 9.88071 11 8.5C11 7.11929 12.1193 6 13.5 6C14.8807 6 16 7.11929 16 8.5ZM18.9934 17.1909C18.7734 16.0139 18.1002 14.9463 17.0939 14.1786C16.0877 13.411 14.8139 12.9933 13.5 13.0001C12.1861 12.9933 10.9123 13.411 9.90605 14.1786C8.8998 14.9463 8.22659 16.0139 8.00664 17.1909C7.99201 17.2926 8.00162 17.396 8.03479 17.4941C8.06797 17.5922 8.12395 17.6826 8.19894 17.7594C8.27394 17.8361 8.36619 17.8973 8.46947 17.9388C8.57275 17.9803 8.68463 18.0011 8.79755 18H18.2024C18.3154 18.0011 18.4273 17.9803 18.5305 17.9388C18.6338 17.8973 18.7261 17.8361 18.8011 17.7594C18.876 17.6826 18.932 17.5922 18.9652 17.4941C18.9984 17.396 19.008 17.2926 18.9934 17.1909Z",
      fill: "currentColor",
    }),
  );
};
const sizeMap = {
  24: ContactPicker24,
};
export function ContactPicker(_ref) {
  let { size = "24" } = _ref,
    props = _objectWithoutProperties(_ref, _excluded);
  const Icon = sizeMap[size] || sizeMap["24"];
  if (
    process.env.NODE_ENV !== "production" &&
    process.env.NODE_ENV !== "test" &&
    !sizeMap[size]
  ) {
    console.warn(
      new Error(
        "The '".concat(
          size,
          "' size is not supported by the 'ContactPicker' icon. Please use one of the available sizes: '24'.",
        ),
      ),
    );
  }
  return /*#__PURE__*/ React.createElement(Icon, props);
}
