const _excluded = ["size"];
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    for (r = 0; r < n.length; r++)
      (o = n[r]),
        -1 === t.indexOf(o) &&
          {}.propertyIsEnumerable.call(e, o) &&
          (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r)
    if ({}.hasOwnProperty.call(r, n)) {
      if (-1 !== e.indexOf(n)) continue;
      t[n] = r[n];
    }
  return t;
}
function _extends() {
  return (
    (_extends = Object.assign
      ? Object.assign.bind()
      : function (n) {
          for (var e = 1; e < arguments.length; e++) {
            var t = arguments[e];
            for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
          }
          return n;
        }),
    _extends.apply(null, arguments)
  );
}
import React from "react";
var Hipercard32 = function Hipercard32(props) {
  return /*#__PURE__*/ React.createElement(
    "svg",
    _extends(
      {
        width: "32",
        height: "24",
        viewBox: "0 0 32 24",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
      },
      props,
    ),
    /*#__PURE__*/ React.createElement("rect", {
      x: ".5",
      y: ".5",
      width: "31",
      height: "23",
      rx: "3.5",
      fill: "#fff",
    }),
    /*#__PURE__*/ React.createElement("path", {
      d: "M9.236 5h-3.11c-1.373.065-2.496.618-2.82 1.76-.17.594-.263 1.248-.395 1.865-.672 3.137-1.268 6.36-1.911 9.434h24.206c1.872 0 3.157-.396 3.504-1.881.161-.69.316-1.472.47-2.23.602-2.955 1.204-5.91 1.82-8.948H9.236z",
      fill: "#B82126",
      stroke: "#fff",
      strokeWidth: ".5",
    }),
    /*#__PURE__*/ React.createElement("path", {
      d: "M21.725 12.802c-.336.329-1.278.422-1.182-.364.08-.652.79-.79 1.56-.697-.057.357-.122.81-.378 1.06zm-1.06-2.545c-.033.18-.082.343-.122.515.384-.097 1.582-.392 1.697.121.038.17-.028.352-.076.485-1.082-.103-1.965.077-2.197.848-.155.517.018 1.025.349 1.167.637.273 1.413-.04 1.681-.47a1.98 1.98 0 0 0-.045.485h.56c.006-.537.085-.971.167-1.454.07-.412.203-.82.182-1.182-.048-.832-1.426-.537-2.197-.515zm5.62 2.802c-.439.01-.657-.262-.667-.712-.017-.788.328-1.663 1.03-1.742.327-.036.564.04.803.121-.22.886-.14 2.311-1.166 2.333zm1.454-4.166c-.056.49-.13.96-.227 1.41-1.598-.507-2.578.67-2.56 2.12.003.28.051.56.227.758.302.342 1.169.424 1.606.136a1.13 1.13 0 0 0 .227-.227c.042-.053.11-.192.121-.152-.023.154-.057.296-.06.47h.59c.114-1.633.466-3.029.728-4.515h-.652zm-16.68 3.924c-.348.37-1.205.364-1.272-.258-.03-.27.071-.553.121-.833.05-.283.087-.554.136-.803.344-.419 1.352-.47 1.455.228.089.605-.15 1.36-.44 1.666zm.516-2.56c-.552-.207-1.224.04-1.515.275 0 .01-.007.012-.016.013l.016-.013v-.002c.005-.102.04-.172.045-.273h-.56a106.38 106.38 0 0 1-.803 4.56h.651c.094-.583.157-1.197.288-1.742.149.573 1.12.464 1.53.242.846-.457 1.498-2.634.364-3.06zm3.09 1.09h-1.53a.903.903 0 0 1 .864-.757c.469-.018.805.172.666.758zm-.621-1.15c-.47.035-.869.17-1.151.469-.347.365-.628 1.173-.546 1.909.118 1.05 1.424 1.011 2.47.757.017-.184.062-.341.09-.515-.43.161-1.178.386-1.62.106-.335-.211-.337-.747-.228-1.212a37.749 37.749 0 0 1 2.136 0c.045-.33.173-.69.06-1.015-.147-.43-.674-.541-1.211-.5zm-5.727.06c-.017.002-.016.024-.015.045a44.685 44.685 0 0 1-.545 3.106h.651c.157-1.08.336-2.139.56-3.151h-.65zm16.998.015c-.576-.288-1.055.195-1.242.485.053-.149.056-.348.106-.5h-.576a46.818 46.818 0 0 1-.56 3.15h.666c.005-.417.087-.726.152-1.135.14-.875.344-1.834 1.363-1.546.034-.148.048-.315.091-.454zm-7.317 2.393c-.06-.155-.076-.41-.06-.605.033-.438.193-.971.439-1.212.34-.333 1.01-.278 1.545-.091.017-.18.053-.341.076-.515-.878-.144-1.71-.055-2.152.409-.432.453-.715 1.495-.515 2.15.235.768 1.286.81 2.137.516.037-.154.057-.326.09-.485-.465.242-1.353.367-1.56-.167zm-.364-2.408c-.577-.233-1.031.16-1.242.53.048-.164.068-.357.106-.53h-.576c-.14 1.091-.348 2.116-.545 3.15h.652c.09-.614.13-1.441.333-2.03.162-.469.585-.869 1.197-.65.008-.174.058-.306.075-.47zM7.136 8.984a78.736 78.736 0 0 1-.303 1.788c-.675.007-1.364.033-2.015-.015.123-.58.211-1.193.333-1.773h-.727c-.26 1.477-.497 2.977-.788 4.424h.743c.116-.742.225-1.492.378-2.197.633-.015 1.392-.043 2 .015-.125.733-.277 1.44-.394 2.182h.742c.239-1.499.49-2.985.788-4.424h-.757zm1.848.667c.13-.09.297-.497.106-.667-.06-.054-.162-.07-.303-.045-.131.022-.206.066-.257.136-.083.112-.158.45-.03.576.123.122.401.057.484 0z",
      fill: "#fff",
    }),
    /*#__PURE__*/ React.createElement("rect", {
      x: ".5",
      y: ".5",
      width: "31",
      height: "23",
      rx: "3.5",
      stroke: "#CCC",
    }),
  );
};
var Hipercard24 = function Hipercard24(props) {
  return /*#__PURE__*/ React.createElement(
    "svg",
    _extends(
      {
        width: "32",
        height: "24",
        viewBox: "0 0 32 24",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
      },
      props,
    ),
    /*#__PURE__*/ React.createElement("path", {
      d: "M9.687 5H6.785c-1.283.07-2.33.663-2.633 1.886-.158.638-.245 1.339-.368 2C3.156 12.25 2.6 15.704 2 19h22.593c1.746 0 2.945-.424 3.27-2.016.15-.74.294-1.578.438-2.39C28.863 11.424 29.425 8.256 30 5H9.687z",
      fill: "#B82126",
    }),
    /*#__PURE__*/ React.createElement("path", {
      d: "M20.807 13.516c-.312.323-1.188.415-1.098-.358.074-.643.734-.78 1.45-.687-.054.352-.115.798-.352 1.045zm-.986-2.507c-.03.178-.075.338-.112.508.357-.095 1.47-.386 1.576.119.036.168-.026.346-.07.477-1.006-.1-1.825.077-2.041.836-.145.508.016 1.009.324 1.149.592.269 1.313-.04 1.562-.463-.026.147-.05.295-.042.478h.52c.006-.53.079-.957.155-1.433.066-.405.189-.806.17-1.163-.045-.82-1.325-.53-2.042-.508zm5.223 2.76c-.408.01-.61-.258-.62-.7-.016-.777.305-1.64.957-1.717.304-.036.524.04.746.12-.204.872-.13 2.276-1.083 2.297zm1.35-4.102c-.051.482-.12.945-.21 1.387-1.485-.498-2.396.66-2.38 2.089.004.276.049.55.212.746.281.337 1.086.417 1.492.134.079-.055.16-.155.211-.224.04-.052.102-.188.113-.149-.021.151-.053.292-.056.463h.549c.105-1.609.432-2.983.675-4.446h-.605zM10.898 13.53c-.324.363-1.12.358-1.182-.254-.027-.266.066-.545.113-.82.046-.28.08-.547.126-.791.32-.413 1.256-.463 1.351.224.083.595-.14 1.34-.408 1.64zm.479-2.522c-.512-.204-1.137.04-1.407.271 0 .01-.007.012-.015.013l.015-.012v-.003c.004-.1.037-.17.042-.269H9.49c-.217 1.53-.475 3.018-.746 4.491h.605c.088-.574.145-1.179.267-1.716.139.565 1.041.457 1.422.239.786-.45 1.392-2.594.338-3.014zm2.871 1.075h-1.421c.045-.347.339-.728.802-.746.436-.018.748.17.62.746zm-.577-1.134c-.437.035-.807.169-1.07.462-.322.36-.583 1.155-.506 1.88.109 1.034 1.323.996 2.294.746.017-.181.058-.337.085-.507-.4.158-1.095.38-1.507.104-.31-.208-.312-.735-.21-1.193a32.998 32.998 0 0 1 1.984 0c.041-.325.16-.68.056-1-.137-.423-.627-.533-1.126-.492zm-5.32.06c-.017.002-.016.023-.015.044a46.418 46.418 0 0 1-.506 3.059h.605c.145-1.065.312-2.106.52-3.104H8.35zm15.793.014c-.535-.283-.98.192-1.155.478.05-.147.053-.343.099-.493h-.535a48.56 48.56 0 0 1-.52 3.104h.619c.004-.412.08-.716.14-1.12.13-.86.32-1.805 1.267-1.521.032-.146.045-.311.085-.448zm-6.799 2.358c-.056-.153-.07-.406-.056-.597.031-.431.18-.956.408-1.194.316-.328.939-.273 1.436-.09.015-.177.049-.335.07-.506-.815-.142-1.589-.054-1.999.402-.401.447-.664 1.473-.478 2.119.217.755 1.194.796 1.984.507.035-.152.054-.321.085-.477-.432.238-1.258.361-1.45-.164zm-.338-2.373c-.537-.23-.958.159-1.154.522.044-.161.063-.35.098-.522h-.534c-.131 1.075-.324 2.084-.507 3.104h.605c.085-.605.122-1.42.31-2 .15-.462.544-.856 1.112-.641.008-.17.054-.301.07-.463zM7.252 9.756a81.918 81.918 0 0 1-.282 1.76c-.627.008-1.267.033-1.872-.014.114-.57.196-1.175.31-1.746h-.676C4.49 11.21 4.27 12.688 4 14.113h.69c.108-.731.21-1.47.352-2.164.588-.015 1.293-.042 1.858.015-.117.722-.258 1.418-.366 2.149h.69c.221-1.476.455-2.94.731-4.357h-.703zm1.717.657c.12-.088.276-.49.098-.657-.056-.053-.15-.068-.281-.045-.122.022-.192.066-.24.135-.076.11-.146.443-.028.567.116.12.374.056.45 0z",
      fill: "#fff",
    }),
  );
};
const sizeMap = {
  32: Hipercard32,
  24: Hipercard24,
};
export function Hipercard(_ref) {
  let { size = "24" } = _ref,
    props = _objectWithoutProperties(_ref, _excluded);
  const Icon = sizeMap[size] || sizeMap["24"];
  if (
    process.env.NODE_ENV !== "production" &&
    process.env.NODE_ENV !== "test" &&
    !sizeMap[size]
  ) {
    console.warn(
      new Error(
        "The '".concat(
          size,
          "' size is not supported by the 'Hipercard' icon. Please use one of the available sizes: '24', '32'.",
        ),
      ),
    );
  }
  return /*#__PURE__*/ React.createElement(Icon, props);
}
