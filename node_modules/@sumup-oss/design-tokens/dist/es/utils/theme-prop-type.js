/**
 * Copyright 2020, SumUp Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import PropTypes from 'prop-types';
const typePropType = PropTypes.shape({
    fontSize: PropTypes.string,
    lineHeight: PropTypes.string,
}).isRequired;
const gridPropType = PropTypes.shape({
    priority: PropTypes.number.isRequired,
    breakpoint: PropTypes.oneOf([
        'default',
        'untilKilo',
        'kilo',
        'mega',
        'giga',
        'tera',
    ]).isRequired,
    cols: PropTypes.number.isRequired,
    maxWidth: PropTypes.string.isRequired,
    gutter: PropTypes.string.isRequired,
}).isRequired;
/**
 * @deprecated
 *
 * Use the CSS custom properties from `@sumup-oss/design-tokens` instead.
 * Use the [`circuit-ui/prefer-custom-properties`](https://github.com/sumup-oss/circuit-ui/tree/main/packages/eslint-plugin-circuit-ui/prefer-custom-properties)
 * ESLint rule to automatically migrate your code.
 */
export const themePropType = PropTypes.shape({
    spacings: PropTypes.shape({
        bit: PropTypes.string.isRequired,
        byte: PropTypes.string.isRequired,
        kilo: PropTypes.string.isRequired,
        mega: PropTypes.string.isRequired,
        giga: PropTypes.string.isRequired,
        tera: PropTypes.string.isRequired,
        peta: PropTypes.string.isRequired,
        exa: PropTypes.string.isRequired,
        zetta: PropTypes.string.isRequired,
    })
        .isRequired,
    iconSizes: PropTypes.shape({
        kilo: PropTypes.string.isRequired,
        mega: PropTypes.string.isRequired,
        giga: PropTypes.string.isRequired,
        tera: PropTypes.string.isRequired,
    })
        .isRequired,
    borderRadius: PropTypes.shape({
        bit: PropTypes.string.isRequired,
        byte: PropTypes.string.isRequired,
        kilo: PropTypes.string.isRequired,
        mega: PropTypes.string.isRequired,
        circle: PropTypes.string.isRequired,
        pill: PropTypes.string.isRequired,
    })
        .isRequired,
    borderWidth: PropTypes.shape({
        kilo: PropTypes.string.isRequired,
        mega: PropTypes.string.isRequired,
    })
        .isRequired,
    typography: PropTypes.shape({
        headline: PropTypes.shape({
            one: typePropType,
            two: typePropType,
            three: typePropType,
            four: typePropType,
        }).isRequired,
        title: PropTypes.shape({
            one: typePropType,
            two: typePropType,
            three: typePropType,
            four: typePropType,
        }).isRequired,
        subHeadline: typePropType,
        body: PropTypes.shape({
            one: typePropType,
            two: typePropType,
        }).isRequired,
        bodyLarge: typePropType,
    }).isRequired,
    fontStack: PropTypes.shape({
        default: PropTypes.string,
        mono: PropTypes.string,
    }).isRequired,
    fontWeight: PropTypes.shape({
        regular: PropTypes.string.isRequired,
        bold: PropTypes.string.isRequired,
    })
        .isRequired,
    breakpoints: PropTypes.shape({
        untilKilo: PropTypes.string.isRequired,
        kilo: PropTypes.string.isRequired,
        kiloToMega: PropTypes.string.isRequired,
        mega: PropTypes.string.isRequired,
        untilMega: PropTypes.string.isRequired,
        megaToGiga: PropTypes.string.isRequired,
        giga: PropTypes.string.isRequired,
        untilGiga: PropTypes.string.isRequired,
        gigaToTera: PropTypes.string.isRequired,
        tera: PropTypes.string.isRequired,
        untilTera: PropTypes.string.isRequired,
    })
        .isRequired,
    mq: PropTypes.shape({
        untilKilo: PropTypes.string.isRequired,
        kilo: PropTypes.string.isRequired,
        kiloToMega: PropTypes.string.isRequired,
        mega: PropTypes.string.isRequired,
        untilMega: PropTypes.string.isRequired,
        megaToGiga: PropTypes.string.isRequired,
        giga: PropTypes.string.isRequired,
        gigaToTera: PropTypes.string.isRequired,
        tera: PropTypes.string.isRequired,
        untilTera: PropTypes.string.isRequired,
    })
        .isRequired,
    grid: PropTypes.shape({
        default: gridPropType,
        untilKilo: gridPropType,
        kilo: gridPropType,
        mega: gridPropType,
        giga: gridPropType,
        tera: gridPropType,
    }).isRequired,
    transitions: PropTypes.shape({
        default: PropTypes.string.isRequired,
        slow: PropTypes.string.isRequired,
    })
        .isRequired,
    zIndex: PropTypes.shape({
        default: PropTypes.number.isRequired,
        absolute: PropTypes.number.isRequired,
        input: PropTypes.number.isRequired,
        popover: PropTypes.number.isRequired,
        tooltip: PropTypes.number.isRequired,
        header: PropTypes.number.isRequired,
        backdrop: PropTypes.number.isRequired,
        navigation: PropTypes.number.isRequired,
        modal: PropTypes.number.isRequired,
        toast: PropTypes.number.isRequired,
    }).isRequired,
});
